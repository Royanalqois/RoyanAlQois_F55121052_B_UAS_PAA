# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1twCFgsTtG3BFsD8hSgMpWoOuqhQGEF3n
"""

import time

# Fungsi untuk Bubble Sort
def bubble_sort(arr):
    n = len(arr)
    start_time = time.time()
    for i in range(n - 1):
        for j in range(n - 1 - i):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    end_time = time.time()
    return arr, end_time - start_time

# Fungsi untuk Insertion Sort
def insertion_sort(arr):
    n = len(arr)
    start_time = time.time()
    for i in range(1, n):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    end_time = time.time()
    return arr, end_time - start_time

# Fungsi untuk menampilkan 5 iterasi pertama dan 5 iterasi terakhir
def print_iterations(arr):
    print("5 Iterasi Pertama:")
    for i in range(5):
        print(arr[i], end=" ")
    print("\n5 Iterasi Terakhir:")
    for i in range(len(arr) - 5, len(arr)):
        print(arr[i], end=" ")
    print()

# Fungsi untuk menampilkan waktu komputasi pengurutan
def print_execution_time(time):
    print("Waktu Eksekusi: {:.6f} detik".format(time))

# Fungsi untuk menampilkan array sebelum dan sesudah pengurutan
def print_before_and_after(arr, sorted_arr):
    print("Sebelum Pengurutan: ", arr)
    print("Setelah Pengurutan: ", sorted_arr)

# Fungsi untuk menganalisis algoritma
def analysis_algorithm():
    print("Analisis Algoritma:")
    print("Worst Case: O(n^2)")
    print("Best Case: O(n)")
    print("Average Case: O(n^2)")

# Main Program
def main():
    arr = [1299621520953948, 324, 84374199733496855339090, 7, 2685463940, 9366064893125712123638432, 5, 344211021, 1750, 2365379541988, 1323115, 6, 3, 140224318, 177, 959, 40, 7, 41, 81]
    print("Menu Pilihan:")
    print("1. Bubble Sort")
    print("2. Insertion Sort")
    choice = input("Masukkan pilihan (1/2): ")

    if choice == '1':
        sorted_arr, execution_time = bubble_sort(arr)
        print_before_and_after(arr, sorted_arr)
        print_iterations(sorted_arr)
        print_execution_time(execution_time)
    elif choice == '2':
        sorted_arr, execution_time = insertion_sort(arr)
        print_before_and_after(arr, sorted_arr)
        print_iterations(sorted_arr)
        print_execution_time(execution_time)
    else:
        print("Pilihan tidak valid.")

    analysis_algorithm()

if __name__ == "__main__":
    main()